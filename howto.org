** How to model a house

After several years of frustratingly trying to model my house's
floorplan with existing tools I have decided to figure out a better
way use lower-level tools. This is the process that I have come up
with.

We will use Metapost to mathematically define the outline of the rooms
using interior measurements and relataionships between the parts. The
features will be defined using layers, starting with walls and then
removing openings, doors, and windows. At this point we can produce a
pretty floor plan, but with a little more effort we can extrude these
drawings up into the 3rd dimension using OpenSCAD to produce a 3d
model.

** Break up the rooms

We are going to define each of the rooms as a path starting at the
lower left and following the interior walls counter-clockwise. Each
room is going to start at (0,0) as we will re-position them later in
relation to the other rooms. The paths between points can be lines
(using the =--= operator) or Bézier curves (using the =..= operator).
Bézier curves can be drawn in a pretty sophisticated way using
Metapost's /Direction/, /Tension/, and /Curl/ operators.

I am grouping each of the contiguous areas in the house (with no walls
in between) as single rooms even if they are conventionally thought of
as seperate rooms. For example, in my house the hallway from the
garage, the kitchen, and the family room are all open to each other so
I'm calling this space "the kitchen" for the sake of the definition.

#+name: paths
#+begin_src metapost
path garage, livingroom, kitchen;
garage := (0,0)--(312,0)--(312,330)--(0,330)--cycle;
livingroom := (0,0)--(456,0)--(456,174)--(456-66,174)..(456-66-84,174+24)..(456-66-84-84,174)--(0,174)--cycle;
kitchen := (0,0)--(96,0)--(96,-144)--(516,-144)--(516,48)--(0,48)--cycle;
#+end_src

TODO: Draw each of the paths with points using Metafun's "drawpath p; drawpoints p;"
TODO: Maybe add labels to the points for their index in the sequence and their coordinates

** Positive each of them relative to the others

We can position each room relative to one or more other rooms using
points on the path (e.g., =point 2 of garage=) or its bounding box
(e.g., =lrcorner garage=).

#+begin_src metapost
livingroom := livingroom shifted (lrcorner garage + (6, 48+6));
#+end_src

** Add openings and doors

Openings, doors, and windows are going to be subpaths on each of the
room paths. This will allow us to be able to do things like windows on
a curved wall.



