
Orient up to 90Â°

wall height = 8'
6" walls

living = rectangle 38' x 14'6" with:
  opening on bottom wall 4' wide, 5'9" from left ("living-family")
  opening on right wall 6' wide, 4'6" from top
  window on top wall 5'11" wide, 5'3" from left, XX" from floor, XX" from ceiling
  6 windows on top wall XX' wide, 5'6" from right, XX" from floor, XX" from ceiling, XX" between windows

garage = rectangle 26' x 27'6" with:
  door on right wall 3' wide, 6" from bottom ("garage-family")
  door on bottom wall 3' wide, 2" from right
  window on top, XX" wide, XX" from left, XX" from floor, XX" from ceiling
  window on top, XX" wide, XX" from right, XX" from floor, XX" from ceiling
  garagedoor on left, XX" wide, XX" from bottom
  garagedoor on left, XX" wide, XX" from top

family = path heading right go 8'6", turn right, go 12', turn left, go 35',
              turn left, go 16', turn left, go 43'6", turn left, go 4'
  door on left, 3' wide, 6" from top ("garage-family")
  opening on top, 4' wide, 4' from left ("living-family")
  door on bottom, XX" wide, XX" from right, XX" from floor, XX" from ceiling
  opening on top, XX" wide, 6" from right
  patiodoor on bottom, XX" wide, 10'3" from right
  window on bottom, XX" wide, XX" from right, XX" from floor, XX" from ceiling
  window on bottom, XX" wide, XX" from right, XX" from floor, XX" from ceiling
  window on bottom, XX" wide, XX" from right, XX" from floor, XX" from ceiling

** Floor plan slices, extrude up until the slice is different

We will start with the floor pretending that the doors don't exist so
there will be openings there. Then we extrude up until we hit the
lowest window, then the slice changes and we extrude up again until
we get to a new slice, and on and on.

We should be able to use anything to generate the slices, not just
OpenSCAD.

*** Just do it in OpenSCAD

#+begin_src scad
include <BOSL/constants.scad>
use <BOSL/transforms.scad>

x = 38;
y = 14.5;
t = .5;

difference {
  square([x, y], center=true);
  square([x+(2*t), y+(2*t)], center=true);
}
#+end_src

*** Try out MetaPost

#+begin_src metapost
ft = 1cm;
pickup pensquare scaled 1bp;
draw (0,0)--(26ft,0)--(26ft,27.5ft)--(0,27.5ft)--cycle;
pickup pensquare scaled 0.5ft;
draw (-.25ft,-.25ft)--(26.25ft,-.25ft)--(26.25ft,27.75ft)--(-0.25ft,27.75ft)--cycle withcolor .8 white;
undraw (26.25ft,0.5ft)--(26.25ft,0.5ft+3ft);
undraw (-.25ft,3ft)--(-.25ft,10ft);
undraw (-.25ft,13ft)--(-.25ft,20ft);
#+end_src

Clean up a bit and use math

#+begin_src metapost
ft = 1cm;
wall_depth = 0.5ft;

% Draw the measured room outline
pickup pensquare scaled 1bp;
draw (0,0)--(26ft,0)--(26ft,27.5ft)--(0,27.5ft)--cycle;

% Draw in the thickness of the walls
pickup pensquare scaled 0.5ft;
t = wall_depth / 2;
draw (0-t,0-t)--(26ft+t,0-t)--(26ft+t,27.5ft+t)--(0-t,27.5ft+t)--cycle withcolor .8 white;

undraw (26ft+t,0.5ft)--(26ft+t,0.5ft+3ft);
undraw (0-t,5ft)     --(0-t,5ft+8ft);      % 5ft from bottom, 8ft wide
undraw (0-t,26ft-2ft)--(0-t,26ft-2ft-8ft); % 2ft from the top, 8ft wide
#+end_src

Move out numbers into variables

#+begin_src metapost
ft = 1cm;
width = 26ft;
depth = 27.5ft;
wall_depth = 0.5ft;

% Draw the measured room outline
pickup pensquare scaled 1bp;
draw (0,0)--(width,0)--(width,depth)--(0,depth)--cycle;

% Draw in the thickness of the walls
pickup pensquare scaled 0.5ft;
t = wall_depth / 2;
draw (0-t,0-t)--(width+t,0-t)--(width+t,depth+t)--(0-t,depth+t)--cycle withcolor .8 white;

undraw (width+t,0.5ft)--(width+t,0.5ft+3ft);
undraw (0-t,5ft)       --(0-t,5ft+8ft);      % 5ft from bottom, 8ft wide
undraw (0-t,width-2ft)--(0-t,width-2ft-8ft); % 2ft from the top, 8ft wide
#+end_src

Add living room

#+begin_src metapost
path p[];
ft = 1cm;
wall_depth = 0.5ft;

garage_width = 26ft;
garage_depth = 27.5ft;
living_width = 38ft;
living_depth = 14.5ft;
mud_hall_depth = 4ft;
mud_hall_width = 8ft;
family_room_hall_width = 43ft;
kitchen_depth = 12ft;
family_room_width = 35ft;
family_room_depth = 16ft;

% G A R A G E
pickup pensquare scaled 1bp; % Draw the measured room outline
draw (0,0)--(garage_width,0)--(garage_width,garage_depth)--(0,garage_depth)--cycle;

pickup pensquare scaled 0.5ft; % Draw in the thickness of the walls
t = wall_depth / 2;
p0 = (0,0)--(garage_width,0)
          --(garage_width,garage_depth)
          --(0,garage_depth)
          --cycle;

pickup pensquare scaled (2wall_depth);
draw p0 withcolor .8 white;
unfill p0;

% L I V I N G   R O O M
p1 = (0,0)--(living_width,0)--(living_width,living_depth)--(0,living_depth)--cycle;

pickup pensquare scaled (2wall_depth);
draw p1 shifted (garage_width+wall_depth, mud_hall_depth+wall_depth) withcolor .8 white;
unfill p1 shifted (garage_width+wall_depth, mud_hall_depth+wall_depth);

% F A M I L Y  R O O M
p2 = (0,0)--(mud_hall_width,0)--(mud_hall_width,-kitchen_depth)
          --(family_room_hall_width,-kitchen_depth)
          --(family_room_hall_width,mud_hall_depth)
          --(0,mud_hall_depth)
          --cycle;

pickup pensquare scaled (2wall_depth);
draw p2 shifted (garage_width+wall_depth, 0) withcolor .8 white;
unfill p2 shifted (garage_width+wall_depth, 0);

% D O O R S
undraw (0,garage_depth-2ft)--(0,garage_depth-2ft-8ft); % Top garage door (2ft from top, 8ft wide)
undraw (0,5ft)--(0,5ft+8ft);                           % Bottom garage door (5ft from bottom, 8ft wide)
undraw (garage_width,1ft)--(garage_width,1ft+2ft);     % Door from garage to mudroom hallway
undraw ((4.5ft,mud_hall_depth)--(4.5ft+4ft,mud_hall_depth)) shifted (garage_width+wall_depth, 0); % Opening from mud room hallway to living room

% R O O M  L I N E S
pickup pensquare scaled 1bp;
draw p0;
draw p1 shifted (garage_width+wall_depth, mud_hall_depth+wall_depth);
draw p2 shifted (garage_width+wall_depth, 0);

% A R R O W S
drawdblarrow (4ft,garage_depth)--(4ft,0);


% G R I D
for i=0 upto 80:
  for j=0 upto 50:
    draw (i*ft,j*ft) shifted (0, -16ft);
  endfor;
endfor;
#+end_src

#+name: run-metapost
#+begin_src sh :results output
cd output
mpost --mem=metafun drawing.mp 
#+end_src

#+begin_src metapost :tangle output/drawing.mp :noweb yes
outputtemplate := "%j.%o";
outputformat := "svg";
beginfig(0);
  <<wildwood>>
endfig;
end.
#+end_src

We can draw a single point from a path like this:

  draw point 2 of garage withpen pencircle scaled 4bp;

#+name: wildwood
#+begin_src metapost
def drawwall (expr p, thickness) =
  pickup pensquare scaled (thickness*2);
  draw p withcolor .8 white;
  unfill p;
enddef;

def drawinterior (expr p) =
  pickup pensquare scaled 1bp;
  draw p;
enddef;

path garage, livingroom, kitchen;
garage = (0,0)--(312,0)--(312,330)--(0,330)--cycle;
livingroom = (0,0)--(456,0)--(456,174)--(456-66,174)..(456-66-84,174+24)..(456-66-84-84,174)--(0,174)--cycle;
kitchen = (0,0)--(96,0)--(96,-144)--(516,-144)--(516,48)--(0,48)--cycle;

drawwall(garage , 6);
drawwall(livingroom shifted (lrcorner garage + (6, 48+6)), 6);
drawwall(kitchen shifted (lrcorner garage + (6, 0)), 6);

drawinterior(garage);
drawinterior(livingroom shifted (lrcorner garage + (6, 48+6)));
drawinterior(kitchen shifted (lrcorner garage + (6, 0)));

#+end_src

code 1256 for marco

(family_room_hall_width,-kitchen_depth)
(family_room_hall_width,mud_hall_depth)
(0,mud_hall_depth)

garage_width 26           312
garage_depth 27.5         330
living_width 38           456
living_depth 14.5         174
mud_hall_depth 4           48
mud_hall_width 8           96
family_room_hall_width 43 516
kitchen_depth 12          144
family_room_width 35      420
family_room_depth 16      192




#+begin_src elisp
(fset 'org-babel-copy-current-src
   (kmacro-lambda-form [?\C-r ?# ?+ ?b ?e ?g ?i ?n ?_ ?s ?r ?c ?\C-a down ?\C-  ?\C-s ?# ?+ ?e ?n ?d ?_ ?s ?r ?c ?\C-a ?\M-w] 0 "%d"))
(global-set-key (kbd "<f5>") 'org-babel-copy-current-src)
#+end_src


*** Try out templating to Metapost directly from Python

#+begin_src python :results output
def draw(*args):
    path = '--'.join([f'({x}ft,{y}ft)' for x, y in args])
    print(f'draw {path}--cycle;')

print('ft = 1cm; pickup pensquare scaled 1bp;')
draw((0,0), (26,0), (26,27.5), (0,27.5))
print('pickup pensquare scaled 0.5ft;')

#+end_src

#+RESULTS:
: ft = 1cm; pickup pensquare scaled 1bp;
: draw (0ft,0ft)--(26ft,0ft)--(26ft,27.5ft)--(0ft,27.5ft)--cycle;
: pickup pensquare scaled 0.5ft;

*** Try out templating to Metapost using Jinja templates
  
  


** Build a wall at a time

#+begin_src scad
include <BOSL/constants.scad>
use <BOSL/transforms.scad>

// Living east wall
difference() {
  cube([38, 0.5, 8]);
  right(5) cube([4, 0.5, 7]);
}

// Living north wall
cube([14.5])
#+end_src

