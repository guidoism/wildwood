** Measurements

Starting at doorway between garage and hallway:

- Garage wall to living room opening:
- Garage wall to brick:
- Living room opening:
- Height of living room opening:   
- Garage wall to far family room wall:

** GUI

- Mostly text-based
- When you press a key it highlights the GUI part and names it
- Click on point and it highlights it and gives the reference name ready to be pasted
- Same with clicking on place where we want a point    

** Ideas

Orient up to 90Â°

wall height = 8'
6" walls

living = rectangle 38' x 14'6" with:
  opening on bottom wall 4' wide, 5'9" from left ("living-family")
  opening on right wall 6' wide, 4'6" from top
  window on top wall 5'11" wide, 5'3" from left, XX" from floor, XX" from ceiling
  6 windows on top wall XX' wide, 5'6" from right, XX" from floor, XX" from ceiling, XX" between windows

garage = rectangle 26' x 27'6" with:
  door on right wall 3' wide, 6" from bottom ("garage-family")
  door on bottom wall 3' wide, 2" from right
  window on top, XX" wide, XX" from left, XX" from floor, XX" from ceiling
  window on top, XX" wide, XX" from right, XX" from floor, XX" from ceiling
  garagedoor on left, XX" wide, XX" from bottom
  garagedoor on left, XX" wide, XX" from top

family = path heading right go 8'6", turn right, go 12', turn left, go 35',
              turn left, go 16', turn left, go 43'6", turn left, go 4'
  door on left, 3' wide, 6" from top ("garage-family")
  opening on top, 4' wide, 4' from left ("living-family")
  door on bottom, XX" wide, XX" from right, XX" from floor, XX" from ceiling
  opening on top, XX" wide, 6" from right
  patiodoor on bottom, XX" wide, 10'3" from right
  window on bottom, XX" wide, XX" from right, XX" from floor, XX" from ceiling
  window on bottom, XX" wide, XX" from right, XX" from floor, XX" from ceiling
  window on bottom, XX" wide, XX" from right, XX" from floor, XX" from ceiling

** Floor plan slices, extrude up until the slice is different

We will start with the floor pretending that the doors don't exist so
there will be openings there. Then we extrude up until we hit the
lowest window, then the slice changes and we extrude up again until
we get to a new slice, and on and on.

We should be able to use anything to generate the slices, not just
OpenSCAD.

#+name: compile
#+begin_src elisp
(org-babel-tangle)
(org-sbe run-metapost)
#+end_src

#+name: run-metapost
#+begin_src sh :results output
which mpost
cd output
pwd
#mpost --mem=metafun drawing.mp || cat drawing.log
#open -a Safari drawing.svg
context drawing.tex
#+end_src

#+begin_src metapost :tangle output/drawing.mp :noweb yes
outputtemplate := "%j.%o";
outputformat := "svg";
beginfig(0);
  <<wildwood>>
endfig;
end.
#+end_src


#+begin_src tex :tangle output/drawing.tex :noweb yes
        
\definefont[bahnlight][name:bahnschriftlight*default]
\definefont[dim][name:bahnschriftlight*default at 5pt]
                                            
\definepapersize [biggy] [width=480mm,height=230mm]
\setuppapersize[biggy]

\starttext
\setuppagenumbering[location=]
\bahnlight
\startMPcode
  <<wildwood>>
\stopMPcode
\stoptext
#+end_src


We can draw a single point from a path like this:

  draw point 2 of garage withpen pencircle scaled 4bp;

#+name: wildwood
#+begin_src metapost
input TEX;
linecap := butt;
linejoin := mitered;

def drawwall (expr p, thickness) =
  pickup pencircle scaled (thickness*2);
  draw p withcolor .8 white;
  unfill p;
enddef;

def drawinterior (expr p) =
  pickup pencircle scaled 1bp;
  draw p;
enddef;

def doorup    (expr p, offset, length) = (p+(0,offset))--(p+(0,offset+length)); enddef;
def doordown  (expr p, offset, length) = (p-(0,offset))--(p-(0,offset+length)); enddef;
def doorright (expr p, offset, length) = (p+(offset,0))--(p+(offset+length,0)); enddef;
def doorleft  (expr p, offset, length) = (p-(offset,0))--(p-(offset+length,0)); enddef;

def drawdimension(expr p, offset) =
  pickup pencircle scaled .7bp;
  drawdblarrow p shifted offset shortened 1.75bp;
  picture pic;
  l := arclength p;
  if (l mod 12 = 0): 
    pic := thelabel("\dim " & decimal(l / 12) & "' ", point 1/2 of p shifted offset);
  else:
    pic := thelabel("\dim " & decimal(floor(l / 12)) & "'" & decimal(l mod 12) & "''", point 1/2 of p shifted offset);
  fi
  unfill bbox pic;
  draw pic;
enddef;

primarydef pct along pat = % This was taken from from MetaFun's macros
  (arctime (pct * (arclength pat)) of pat) of pat
enddef;

ft = 12bp;
A :=  4.090 ft;
B :=  8.095 ft;
C := 18.530 ft;
D := 43.530 ft;
E :=  8.550 ft;
F :=  5.420 ft;
G :=  3.015 ft;
H :=  1.910 ft;
I :=  0.330 ft;
J := 12.525 ft;
K := 15.975 ft;
L :=  2.155 ft;
M :=  7.950 ft;
N := 10.920 ft;
O := 15.855 ft;
P := 17.110 ft;
Q := 22.905 ft;
R := 24.460 ft;
S := 12.085 ft;
T :=  1.365 ft;
U :=  0.615 ft;
V :=  3.930 ft;
W :=  9.990 ft;
X :=  2.670 ft;

path garage, livingroom, kitchen, blueroom, master, masterbath, hallbath, southbed, smallbed, laundry;
garage := (0,0)--(312,0)--(312,330)--(0,330)--cycle;
livingroom := (0,0)--(456,0)--(456,174)--(456-66,174)..(456-66-84,174+24)..(456-66-84-84,174)--(0,174)--cycle;
kitchen := (0,0)--(E,0)--(E,-J)--(D-E,-J)--(D-E,K-J)--(0,K-J)--cycle;
blueroom := (0,0)--(132,0)--(132,192)--(0,192)--cycle;
master := (0,0)--(240,0)--(240,156)--(240-144,156)--(240-144,156+36)--(0,156+36)--cycle;

livingroom := livingroom shifted (lrcorner garage + (6, 48+6));
kitchen    := kitchen shifted (lrcorner garage + (6, 0));
blueroom   := blueroom shifted (lrcorner kitchen + (6, 0));
master     := master shifted (lrcorner blueroom + (6, 0));

drawwall(garage , 6);
drawwall(livingroom, 6);
drawwall(kitchen, 6);
drawwall(blueroom, 6);
drawwall(master, 6);

path door[];
door[0] := doorup    (point 1 of garage, 6, 36);       undraw door[0]; % Garage to family
door[1] := doorup    (point 0 of garage, 5*12, 8*12);  undraw door[1]; % West garage door
door[2] := doordown  (point 3 of garage, 2*12, 8*12);  undraw door[2]; % East garage door
door[3] := doorup    (point 1 of livingroom, 49, 72);  undraw door[3]; % Living room to front entry
door[4] := doorright (point 0 of livingroom, 49, 48);  undraw door[4]; % Living to garage entry
door[5] := doorleft  (point 4 of kitchen,     U, V-U); undraw door[5]; % Family to front entry
door[6] := doorleft  (point 2 of blueroom, 3, 36);     undraw door[6]; % Blue room door
door[7] := doorleft  (point 4 of master, 3, 36);       undraw door[7]; % Master room door

drawinterior(garage);
drawinterior(livingroom);
drawinterior(kitchen);
drawinterior(blueroom);
drawinterior(master);

drawdimension((point 0 of door[1])--(point 0 of garage), (5,0));
drawdimension((point 0 of door[2])--(point 3 of garage), (10,0));
drawdimension((point 1 of door[1])--(point 1 of door[2]), (5,0));
drawdimension((point 0 of garage)--(point 3 of garage), (20,0));
drawdimension((point 2 of garage)--(point 3 of garage), (0,-20));
drawdimension((point 5 of kitchen)--(point 4 of kitchen), (0,-5));
drawdimension((point 5 of kitchen)--(point 0 of door[4] shifted (0,-6)), (0,0));

%path outline; outline = (0,-50)--(100,-50)--(100,50)--(0,50)--cycle;
%clip currentpicture to outline; draw outline;

%path p;
%p := (point 2 of garage)..(point 3 of garage);
%drawdblarrow p withcolor blue;

#+end_src


#+begin_src elisp
(fset 'org-babel-copy-current-src
   (kmacro-lambda-form [?\C-r ?# ?+ ?b ?e ?g ?i ?n ?_ ?s ?r ?c ?\C-a down ?\C-  ?\C-s ?# ?+ ?e ?n ?d ?_ ?s ?r ?c ?\C-a ?\M-w] 0 "%d"))
(global-set-key (kbd "<f5>") 'org-babel-copy-current-src)
#+end_src


*** Try out templating to Metapost directly from Python

#+begin_src python :results output
def draw(*args):
    path = '--'.join([f'({x}ft,{y}ft)' for x, y in args])
    print(f'draw {path}--cycle;')

print('ft = 1cm; pickup pensquare scaled 1bp;')
draw((0,0), (26,0), (26,27.5), (0,27.5))
print('pickup pensquare scaled 0.5ft;')

#+end_src

#+RESULTS:
: ft = 1cm; pickup pensquare scaled 1bp;
: draw (0ft,0ft)--(26ft,0ft)--(26ft,27.5ft)--(0ft,27.5ft)--cycle;
: pickup pensquare scaled 0.5ft;

*** Try out templating to Metapost using Jinja templates
  
  


** Build a wall at a time

#+begin_src scad
include <BOSL/constants.scad>
use <BOSL/transforms.scad>

// Living east wall
difference() {
  cube([38, 0.5, 8]);
  right(5) cube([4, 0.5, 7]);
}

// Living north wall
cube([14.5])
#+end_src

